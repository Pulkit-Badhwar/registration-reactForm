{"ast":null,"code":"var _jsxFileName = \"/Users/pulkitbadhwar/Desktop/work/react/register-frontend/src/Dashboard/Register Candidate/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [publishDate, setDate] = useState(new Date());\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState('');\n  let token = localStorage.getItem('token');\n\n  const clearForm = e => {\n    e.preventDefault();\n    reset();\n  };\n\n  const fileHandler = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const reset = () => {\n    window.location.reload(true);\n  };\n\n  const submit = event => {\n    event.preventDefault();\n\n    if (!description) {\n      alert(`Description is required`);\n    } else {\n      const formData = new FormData();\n      formData.append('publishDate', publishDate);\n      formData.append('description', description);\n      formData.append('files', file);\n      fetch('http://localhost:8100/api/archiveReport/upload', {\n        method: 'POST',\n        headers: {\n          'X-ACCESS-TOKEN': token\n        },\n        body: formData\n      }).then(response => {\n        return response.json();\n      }).then(responseJson => {\n        if (responseJson.success) {\n          alert(\"Registered successfully\");\n        } else {\n          alert(\"Error occured\");\n        }\n\n        reset();\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"FormPublishDate\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Publish Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: publishDate,\n          onChange: publishDate => setDate(publishDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"FormDescription\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: description,\n          type: \"description\",\n          placeholder: \"Enter Description\",\n          style: {\n            height: '100px'\n          },\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"FormFile\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          onChange: fileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: event => submit(event),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: event => clearForm(event),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"ZsZ5XZ9DtShRKm4fwSVrBWrRBNc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/pulkitbadhwar/Desktop/work/react/register-frontend/src/Dashboard/Register Candidate/Register.js"],"names":["React","useState","Form","Button","Container","Row","Col","DatePicker","Register","publishDate","setDate","Date","description","setDescription","file","setFile","token","localStorage","getItem","clearForm","e","preventDefault","reset","fileHandler","event","target","files","window","location","reload","submit","alert","formData","FormData","append","fetch","method","headers","body","then","response","json","responseJson","success","height","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction Register() {\n\n    const [publishDate, setDate] = useState(new Date());\n    const [description, setDescription] = useState('');\n    const [file, setFile] = useState('');\n\n    let token = localStorage.getItem('token');\n\n    const clearForm = (e) => {\n        e.preventDefault();\n        reset();\n    }\n\n    const fileHandler = event => {\n        setFile(event.target.files[0])\n    }\n\n    const reset = () => {\n        window.location.reload(true);\n    }\n\n    const submit = (event) => {\n        event.preventDefault();\n        if (!description) {\n            alert(`Description is required`);\n        }\n        else {\n            const formData = new FormData();\n            formData.append('publishDate', publishDate);\n            formData.append('description', description);\n            formData.append('files', file);\n\n            fetch('http://localhost:8100/api/archiveReport/upload', {\n                method: 'POST',\n                headers: {\n                    'X-ACCESS-TOKEN': token\n                },\n                body: formData\n            })\n                .then((response) => {\n                    return response.json()\n                })\n                .then((responseJson) => {\n                    if (responseJson.success) {\n                        alert(\"Registered successfully\");\n                    }\n                    else {\n                        alert(\"Error occured\");\n                    }\n                    reset();\n\n                });\n        }\n    }\n\n    return (\n        <Container>\n            <h1>Registration Form</h1>\n            <br></br>\n            <Form>\n                <br></br>\n                <Form.Group controlId=\"FormPublishDate\">\n                    <Form.Label>Enter Publish Date</Form.Label>\n                    <DatePicker selected={publishDate} onChange={publishDate => setDate(publishDate)} />\n                </Form.Group>\n                <Form.Group controlId=\"FormDescription\">\n                    <Form.Label>Enter Description</Form.Label>\n                    <Form.Control\n                        value={description}\n                        type='description'\n                        placeholder='Enter Description'\n                        style={{ height: '100px' }}\n                        onChange={(e) => setDescription(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"FormFile\">\n                    <Form.Label>Enter File</Form.Label>\n                    <input type=\"file\" name=\"file\" onChange={fileHandler} />\n                </Form.Group>\n            </Form>\n            <Row>\n                <Col>\n                    <Button variant='primary' type='submit' onClick={(event) => submit(event)}>Submit</Button>\n                </Col>\n                <Col>\n                    <Button variant='primary' onClick={(event) => clearForm(event)}>clear</Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}