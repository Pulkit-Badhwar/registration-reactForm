{"ast":null,"code":"var _jsxFileName = \"/Users/pulkitbadhwar/Desktop/work/react/register-frontend/src/Dashboard/Register Candidate/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [number, setNumber] = useState('');\n  const [publishDate, setDate] = useState(new Date());\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState('');\n  let token = localStorage.getItem('token');\n\n  const clearForm = e => {\n    e.preventDefault();\n    reset();\n  };\n\n  const fileHandler = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const reset = () => {\n    window.location.reload(true);\n  };\n\n  const submit = event => {\n    event.preventDefault();\n\n    if (!description) {\n      alert(`Description is required`);\n    } else {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('email', email);\n      formData.append('number', number);\n      formData.append('publishDate', publishDate);\n      formData.append('description', description);\n      formData.append('files', file);\n      fetch('http://localhost:8100/Some API link', {\n        method: 'POST',\n        headers: {\n          'X-ACCESS-TOKEN': token\n        },\n        body: formData\n      }).then(response => {\n        return response.json();\n      }).then(responseJson => {\n        if (responseJson.success) {\n          alert(\"Registered successfully\");\n        } else {\n          alert(\"Error occured\");\n        }\n\n        reset();\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                placeholder: \"Enter Name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormNumber\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Enter Phone Number\",\n                maxLength: 10,\n                onChange: e => setNumber(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormPublishDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Registration Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                selected: publishDate,\n                onChange: publishDate => setDate(publishDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormDescription\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Enter Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: description,\n                type: \"description\",\n                placeholder: \"Enter Description\",\n                style: {\n                  height: '100px'\n                },\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"FormFile\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Upload Resume\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                onChange: fileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: event => submit(event),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: event => clearForm(event),\n            children: \"clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"m0zl/DTHzJ81HRHYJrBHBv9+58k=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/pulkitbadhwar/Desktop/work/react/register-frontend/src/Dashboard/Register Candidate/Register.js"],"names":["React","useState","Form","Button","Container","Row","Col","Card","DatePicker","Register","name","setName","email","setEmail","number","setNumber","publishDate","setDate","Date","description","setDescription","file","setFile","token","localStorage","getItem","clearForm","e","preventDefault","reset","fileHandler","event","target","files","window","location","reload","submit","alert","formData","FormData","append","fetch","method","headers","body","then","response","json","responseJson","success","value","height"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button, Container, Row, Col, Card} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction Register() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [number, setNumber] = useState('');\n    const [publishDate, setDate] = useState(new Date());\n    const [description, setDescription] = useState('');\n    const [file, setFile] = useState('');\n\n    let token = localStorage.getItem('token');\n\n    const clearForm = (e) => {\n        e.preventDefault();\n        reset();\n    }\n\n    const fileHandler = event => {\n        setFile(event.target.files[0])\n    }\n\n    const reset = () => {\n        window.location.reload(true);\n    }\n\n    const submit = (event) => {\n        event.preventDefault();\n        if (!description) {\n            alert(`Description is required`);\n        } else {\n            const formData = new FormData();\n            formData.append('name', name);\n            formData.append('email', email);\n            formData.append('number', number);\n            formData.append('publishDate', publishDate);\n            formData.append('description', description);\n            formData.append('files', file);\n\n            fetch('http://localhost:8100/Some API link', {\n                method: 'POST',\n                headers: {\n                    'X-ACCESS-TOKEN': token\n                },\n                body: formData\n            })\n                .then((response) => {\n                    return response.json()\n                })\n                .then((responseJson) => {\n                    if (responseJson.success) {\n                        alert(\"Registered successfully\");\n                    } else {\n                        alert(\"Error occured\");\n                    }\n                    reset();\n\n                });\n        }\n    }\n\n    return (\n        <Container>\n            <Card>\n            <h1>Registration Form</h1>\n            <br></br>\n            <Form>\n                <Row>\n                    <Col>\n                        <Form.Group controlId=\"FormName\">\n                            <Form.Label>Enter Name</Form.Label>\n                            <Form.Control type='name' placeholder='Enter Name'\n                                          onChange={(e) => setName(e.target.value)}/>\n                        </Form.Group>\n                        <br/>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"FormEmail\">\n                            <Form.Label>Enter Email</Form.Label>\n                            <Form.Control type='email' placeholder='Enter Email'\n                                          onChange={(e) => setEmail(e.target.value)}/>\n                        </Form.Group>\n                        <br/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <Form.Group controlId=\"FormNumber\">\n                            <Form.Label>Enter Phone Number</Form.Label>\n                            <Form.Control type='number' placeholder='Enter Phone Number' maxLength={10}\n                                          onChange={(e) => setNumber(e.target.value)}/>\n                        </Form.Group>\n                        <br/>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"FormPublishDate\">\n                            <Form.Label>Registration Date</Form.Label>\n                            <DatePicker selected={publishDate} onChange={publishDate => setDate(publishDate)}/>\n                        </Form.Group>\n                        <br/>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <Form.Group controlId=\"FormDescription\">\n                            <Form.Label>Enter Description</Form.Label>\n                            <Form.Control\n                                value={description}\n                                type='description'\n                                placeholder='Enter Description'\n                                style={{height: '100px'}}\n                                onChange={(e) => setDescription(e.target.value)}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"FormFile\">\n                            <Form.Label><h5>Upload Resume</h5></Form.Label>\n                            <br/>\n                            <input type=\"file\" name=\"file\" onChange={fileHandler}/>\n                        </Form.Group>\n                    </Col>\n                </Row>\n            </Form>\n            <br/>\n            <Row>\n                <Col>\n                    <Button variant='primary' type='submit' onClick={(event) => submit(event)}>Submit</Button>\n                </Col>\n                <Col>\n                    <Button variant='primary' onClick={(event) => clearForm(event)}>clear</Button>\n                </Col>\n            </Row>\n            </Card>\n        </Container>\n    )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}